import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useQuery, gql, useMutation } from '@apollo/client'
import Todo from '../components/Todo'
import { useState } from 'react'
import { useAuthenticated, useSignInEmailPassword, useSignOut } from '@nhost/react'
import { useAuthQuery } from '@nhost/react-apollo'


const GET_TODO = gql`
  query {
    todo {
      title,
      id,
      completed
    }
  }
`

const ADD_TODO = gql`
  mutation ADDTodoMutation($todo: todo_insert_input!) {
    insert_todo(objects: [$todo]) {
      affected_rows
    }
  }
`

export default function Home() {
  const { data, loading, error } = useAuthQuery(GET_TODO);
  const [todoTitle, setTodoTitle] = useState('')
  const [insertTodo] = useMutation(ADD_TODO)
  const isAuthenticated = useAuthenticated()
  const { signOut } = useSignOut()
  const { signInEmailPassword } = useSignInEmailPassword()

  const handleSignIn = async (e) => {
    e.preventDefault()
    await signInEmailPassword('hello@elton.me', '12345678')
    console.log('user is signed in.')
  }

  const handleSignOut = async (e) => {
    e.preventDefault()
    await signOut()
    console.log('user is signed out.')
  }

  const handleSubmit = (e) => {
    e.preventDefault()
    try {
      insertTodo({
        variables: {
          todo: {
            title: todoTitle
          }
        }
      })
      setTodoTitle('')
    } catch (error) {
      console.log(error)
    }
    console.log('form submitted')
  }

  console.log(data)

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Todo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Create Nhost <a href="https://nextjs.org">Todo App</a>
        </h1>

        <form className={styles.form} onSubmit={handleSubmit}>
          <input className={styles.input} type="text" value={todoTitle} onChange={(e) => setTodoTitle(e.target.value)} placeholder="Enter a todo item" />
        </form>

        {isAuthenticated ? 
          <button className={styles.button} onClick={handleSignOut}>Sign Out</button> : 
          <button className={styles.button} onClick={handleSignIn}>Sign In</button>
        }

        {data ? <Todo loading={loading} error={error} data={data} /> : <h2>No Data</h2>}
      </main>

    </div>
  )
}
